{# 04-Hub-MultiRegion.j2                                                      #}
{# Release: 7.4 (EXPERIMENTAL)                                                #}
{# Design flavor: Dynamic BGP on Loopback (unified, ADVPN 2.0 ready)          #}
{# -------------------------------------------------------------------------- #}
{# Disclaimer: Normally, this file is not supposed to be edited by users.     #}
{# -------------------------------------------------------------------------- #}

{% import 'Project' as project with context %}

{% set multi_vrf = true if project.regions[region].vrfs|default([]) else false %}
{% set pe_vrf = project.pe_vrf|default(1) if multi_vrf else 0 %}

{% set hub2hub_ol = [] %}
{% set my_index = project.regions[region].hubs.index(hostname) + 1 %}

{# If options are not customized, use the project-wide defaults #}
{% set options = project.profiles[profile].options|default(
        {
          'force_cleanup': project.force_cleanup|default(false)
        }
    )
%}

{# Start: multi-regional config #}
{% if project.multireg|default(true) and project.regions|count > 1  %}

{# Build Hub-to-Hub tunnels #}

{% for i in project.profiles[profile].interfaces 
      if i.role == 'wan' and
      i.name is defined and 
      project.hubs[hostname].overlays[i.ol_type].hub2hub|default(true) %}
  {% for r in project.regions if r != region %}
    {% for h in project.regions[r].hubs %}
      {% if i.ol_type in project.hubs[h].overlays and 
            project.hubs[h].overlays[i.ol_type].hub2hub|default(true) %}
      config vpn ipsec phase1-interface
        edit "{{ r|upper }}_H{{ loop.index}}_{{ i.ol_type }}"
          set interface "{{ i.name }}"
          set ike-version 2
          {% if project.cert_auth|default(true) %}
          set authmethod signature
          set certificate "{{ project.hub_cert_template|default('Hub') }}"
          {% else %}
          set authmethod psk
          set psksecret {{ project.psk|default('S3cr3t!') }}
          {% endif %}
          set keylife 28800
          set peertype any
          set exchange-fgt-device-id enable
          set proposal aes256gcm-prfsha256
          {% if project.multireg_advpn|default(true) %}
          set auto-discovery-sender enable
          set auto-discovery-receiver enable
          set auto-discovery-forwarder enable
          set add-route disable
          {% else %}
          set auto-discovery-sender disable
          set auto-discovery-receiver disable
          set auto-discovery-forwarder disable          
          set exchange-interface-ip enable
          {% endif %}
          set encapsulation {{ 'vpn-id-ipip' if multi_vrf else 'none' }}
          set remote-gw {{ project.hubs[h].overlays[i.ol_type].wan_ip }}
          set exchange-ip-addr4 {{ loopback|ipaddr('address') }}
          set network-overlay disable
          set dpd-retrycount 3
          set dpd-retryinterval 5
          set dpd on-idle
        next
      end
      config vpn ipsec phase2-interface
        edit "{{ r|upper }}_H{{ loop.index}}_{{ i.ol_type }}"
          set phase1name "{{ r|upper }}_H{{ loop.index}}_{{ i.ol_type }}"
          set proposal aes256gcm
          set keepalive enable
          set keylifeseconds 3600
        next
      end
      config system interface
        edit "{{ r|upper }}_H{{ loop.index}}_{{ i.ol_type }}"
          set vrf {{ pe_vrf }} 
        next
      end
      {% if project.overlay_stickiness|default(false) %}
      config router policy
        edit {{ hub2hub_ol|length * 2 + 11 }}
          set input-device "EDGE_{{ i.ol_type }}"
          set output-device "{{ r|upper }}_H{{ loop.index}}_{{ i.ol_type }}"
          {{'un' if not project.lan_summary|default()}}set dst {{ project.lan_summary|default() }}
        next
        edit {{ hub2hub_ol|length * 2 + 12 }}
          set input-device "{{ r|upper }}_H{{ loop.index}}_{{ i.ol_type }}"
          set output-device "EDGE_{{ i.ol_type }}"
          {{'un' if not project.lan_summary|default()}}set dst {{ project.lan_summary|default() }}
        next
      end
      {% endif %}
      {{ hub2hub_ol.append(r|upper~'_H'~loop.index~'_'~i.ol_type) or "" }}
      {% endif %}
    {% endfor %}
  {% endfor %}
{% endfor %}

{% if project.create_hub2hub_zone|default(true) %}
config system zone
  edit "{{project.hub2hub_zone|default('hub2hub_overlay')}}"
    append interface {{ hub2hub_ol|join(' ') }}
  next
end
{% endif %}

{# Build Hub-to-Hub BGP peering #}

config router access-list
  {# Advertise regional LAN summaries between the regions #}
  edit "LAN_REGIONAL_SUMMARY"
    config rule
      purge
      {% for v in project.regions[region].vrfs|default(
                  [{ 'lan_summary': project.regions[region].lan_summary }]) %}
      edit 0
        set prefix {{ v.lan_summary }}
        set exact-match enable
      next
      {% endfor %}      
    end
  next
  {# Advertise regional loopback summaries between the regions #}
  edit "LO_REGIONAL_SUMMARY"
    config rule
      purge
      edit 1
        set prefix {{ project.regions[region].lo_summary }}
        set exact-match enable
      next
    end
  next
end
config router static
  edit 103
    set dst {{ project.regions[region].lo_summary }}
    set blackhole enable
    set comment "Regional loopback summary"
  next
end
config router bgp
  config aggregate-address
    purge
    {% for v in project.regions[region].vrfs|default(
                [{ 'lan_summary': project.regions[region].lan_summary }]) %}
    edit 0
      set prefix {{ v.lan_summary }}
    next
    {% endfor %}
  end
  config network
    edit 103
      set prefix {{ project.regions[region].lo_summary }}
    next
  end
end

config router route-map
  edit "HUB2HUB_OUT"
    config rule
      purge
      edit 1
        set match-ip-address "LAN_REGIONAL_SUMMARY"
        set set-metric {{ 100 if my_index == 2 else 0 }}
      next
      edit 2
        {# Do not readvertise regional loopback summary to remote Edges and other regions #}
        set match-ip-address "LO_REGIONAL_SUMMARY"
        set set-community no-advertise
        set set-metric {{ 100 if my_index == 2 else 0 }}
      next
    end
  next
end
config router bgp
  config neighbor
    {% for r in project.regions if r != region %}
    {% for h in project.regions[r].hubs %}
    edit {{ project.hubs[h].lo_bgp }}
      set ebgp-enforce-multihop enable
      set soft-reconfiguration enable
      set capability-graceful-restart enable
      set advertisement-interval 1
      set interface "Lo"
      set update-source "Lo"
      set connect-timer 1
      set remote-as {{ project.regions[r].as }}
      unset route-map-out{{'-vpnv4' if not multi_vrf}}
      set route-map-out{{'-vpnv4' if multi_vrf}} "HUB2HUB_OUT"      
      {% if multi_vrf %}
      set soft-reconfiguration-vpnv4 enable
      set capability-graceful-restart-vpnv4 enable
      {% else %}
      unset soft-reconfiguration-vpnv4
      unset capability-graceful-restart-vpnv4
      {% endif %}
    next
    {% endfor %}
    {% endfor %}
  end
end

{# End: multi-regional config #}
{% elif options.force_cleanup|default(false) %}
config router static
  delete 103
end
config router bgp
  config network
    delete 103
  end
end
{% endif %}
