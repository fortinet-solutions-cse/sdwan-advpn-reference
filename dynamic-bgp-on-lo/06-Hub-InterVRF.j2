{# 06-Hub-InterVRF.j2                                                         #}
{# Release: 7.4 (EXPERIMENTAL)                                                #}
{# Design flavor: Dynamic BGP on Loopback (unified, ADVPN 2.0 ready)          #}
{# -------------------------------------------------------------------------- #}
{# Disclaimer: Normally, this file is not supposed to be edited by users.     #}
{# -------------------------------------------------------------------------- #}

{% import 'Project' as project with context %}

{% set multi_vrf = true if project.regions[region].vrfs|default([]) else false %}
{% set pe_vrf = project.pe_vrf|default(1) if multi_vrf else 0 %}
{% set vrf_leak_summary = project.vrf_leak_summary|default('10.200.255.0/24') %}

{# If options are not customized, use the project-wide defaults #}
{% set options = project.profiles[profile].options|default(
        {
          'leak_npu_link': ''
        }
    )
%}

{# Internet access: VRF Leak to PE #}
{% for i in project.profiles[profile].interfaces if i.vrf is defined %}
{% if i.name is defined and i.allow_dia|default(false) %}
  {# Configure software vdom-link interface if model is VM #}
  {% if options.leak_npu_link|default('') == '' %}
  config system vdom-link
    edit "vrf{{ i.vrf }}_leak"
    next
  end
  config system interface
    edit "vrf{{ i.vrf }}_leak0"
      set type vdom-link
      set vrf {{ pe_vrf }}
      set vdom 'root'
      set ip {{ vrf_leak_summary|ipaddr((i.vrf * 2 + 1))|ipaddr('address') }}/31
      set allowaccess ping
    next
    edit "vrf{{ i.vrf }}_leak1"
      set type vdom-link
      set vrf {{ i.vrf }}
      set vdom 'root'
      set ip {{ vrf_leak_summary|ipaddr((i.vrf * 2))|ipaddr('address') }}/31
      set allowaccess ping
    next
  end
  {# Configure vlan interfaces on top of npu link if model is HW #}
  {% else %}
  config system interface
    edit "vrf{{ i.vrf }}_leak0"
      set type vlan
      set vlanid {{ 4000 + i.vrf }}
      set interface "{{options.leak_npu_link}}0"
      set vrf {{ pe_vrf }}
      set vdom 'root'
      set mode static
      set ip {{ vrf_leak_summary|ipaddr((i.vrf * 2 + 1))|ipaddr('address') }}/31
      set allowaccess ping
    next
    edit "vrf{{ i.vrf }}_leak1"
      set type vlan
      set vlanid {{ 4000 + i.vrf }}
      set interface "{{options.leak_npu_link}}1"
      set vrf {{ i.vrf }}
      set vdom 'root'
      set mode static
      set ip {{ vrf_leak_summary|ipaddr((i.vrf * 2))|ipaddr('address') }}/31
      set allowaccess ping
    next
  end
  {% endif %}

  {# Configure a zone for easier policy management of vrf leaking #}
  {% if project.create_vrf_leak_zone|default(true) and i.role == 'lan' %}
  config system zone
    edit "{{ project.pevrf_leak_zone|default('pevrf_leak_zone') }}"
      append interface "vrf{{ i.vrf }}_leak0"
    next
    edit "{{ project.vrf_leak_zone|default('vrfs_leak_zone') }}"
      append interface "vrf{{ i.vrf }}_leak1"
    next
  end
  {% endif %}

  {# Add default route to pe_vrf for each vrf #}
  config router static
    edit {{ 4000 + i.vrf }}
      set gateway {{ vrf_leak_summary|ipaddr((i.vrf * 2 + 1))|ipaddr('address') }}
      set device vrf{{ i.vrf }}_leak1
    next
  end  

{% else %}
  {# Cleanup: delete the current VRF leaking config #}
  config router static
    delete {{ 4000 + i.vrf }}
  end
  {% if project.create_vrf_leak_zone|default(true) %}
  config system zone
    edit "{{ project.pevrf_leak_zone|default('pevrf_leak_zone') }}"
      unselect interface "vrf{{ i.vrf }}_leak0"
    next
    edit "{{ project.vrf_leak_zone|default('vrfs_leak_zone') }}"
      unselect interface "vrf{{ i.vrf }}_leak1"
    next
  end
  {% endif %}
  {% if options.leak_npu_link|default('') == '' %}
  config system vdom-link
    delete "vrf{{ i.vrf }}_leak"
  end
  {% else %}
  config system interface 
    delete "vrf{{ i.vrf }}_leak0"
    delete "vrf{{ i.vrf }}_leak1"
  end
  {% endif %}
{% endif %}
{% endfor %}