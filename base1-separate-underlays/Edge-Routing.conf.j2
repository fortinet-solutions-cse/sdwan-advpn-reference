config router static
  edit 100
    # Default route (mandatory for RIA)
    set sdwan enable
  next
  edit 101
    # Avoid potential leak of corporate traffic to underlay
    set dstaddr "CORP_LAN"
    set blackhole enable
  next
  edit 102
    # Avoid potential recursive resolution of corporate BGP routes via underlay
    set dst {{ globals.tunnel_subnet_aggregate }}
    set blackhole enable
  next
end

config router community-list
  edit "T1"
    config rule
      edit 1
        set action permit
        set match "{{ globals.as }}:1"
      next
    end
  next
  edit "T2"
    config rule
      edit 1
        set action permit
        set match "{{ globals.as }}:2"
      next
    end
  next
end
config router route-map
  edit "T1_OUT"
    # Mark overlay community (T1)
    config rule
      edit 1
        set set-community "{{ globals.as }}:1"
      next
    end
  next
  edit "T2_OUT"
    # Mark overlay community (T2)
    config rule
      edit 1
        set set-community "{{ globals.as }}:2"
      next
    end
  next
  edit "H1_T1_IN"
    config rule
      edit 1
        # Prefer same-overlay routes (T1)
        set match-community "T1"
        set set-weight 200
      next
      edit 100
        # Override BGP NH to allow cross-overlay traffic (last resort)
        set set-ip-nexthop {{ hubs[regions[edges[e].region].h1].t1_ip }}
      next
    end
  next
  edit "H2_T1_IN"
    config rule
      edit 1
        # Prefer same-overlay routes (T1)
        set match-community "T1"
        set set-weight 200
      next
      edit 100
        # Override BGP NH to allow cross-overlay traffic (last resort)
        set set-ip-nexthop {{ hubs[regions[edges[e].region].h2].t1_ip }}
      next
    end
  next
  edit "H1_T2_IN"
    config rule
      edit 1
        # Prefer same-overlay routes (T2)
        set match-community "T2"
        set set-weight 200
      next
      edit 100
        # Override BGP NH to allow cross-overlay traffic (last resort)
        set set-ip-nexthop {{ hubs[regions[edges[e].region].h1].t2_ip }}
      next
    end
  next
  edit "H2_T2_IN"
    config rule
      edit 1
        # Prefer same-overlay routes (T1)
        set match-community "T2"
        set set-weight 200
      next
      edit 100
        # Override BGP NH to allow cross-overlay traffic (last resort)
        set set-ip-nexthop {{ hubs[regions[edges[e].region].h2].t2_ip }}
      next
    end
  next
end

config router bgp
  set as {{ globals.as }}
  set router-id {{ edges[e].router_id }}
  set keepalive-timer 5
  set holdtime-timer 15
  set ibgp-multipath enable
  set additional-path enable
  # additional-path-select = number of overlays
  set additional-path-select 2
  config neighbor
    edit {{ hubs[regions[edges[e].region].h1].t1_ip }}
      set soft-reconfiguration enable
      set advertisement-interval 1
      set link-down-failover enable
      set interface "H1_T1"
      set connect-timer 1
      set remote-as {{ globals.as }}
      set route-map-in "H1_T1_IN"
      set route-map-out "T1_OUT"
      set additional-path receive
    next
    edit {{ hubs[regions[edges[e].region].h1].t2_ip }}
      set soft-reconfiguration enable
      set advertisement-interval 1
      set link-down-failover enable
      set interface "H1_T2"
      set connect-timer 1
      set remote-as {{ globals.as }}
      set route-map-in "H1_T2_IN"
      set route-map-out "T2_OUT"
      set additional-path receive
    next
    edit {{ hubs[regions[edges[e].region].h2].t1_ip }}
      set soft-reconfiguration enable
      set advertisement-interval 1
      set link-down-failover enable
      set interface "H2_T1"
      set connect-timer 1
      set remote-as {{ globals.as }}
      set route-map-in "H2_T1_IN"
      set route-map-out "T1_OUT"
      set additional-path receive
    next
    edit {{ hubs[regions[edges[e].region].h2].t2_ip }}
      set soft-reconfiguration enable
      set advertisement-interval 1
      set link-down-failover enable
      set interface "H2_T2"
      set connect-timer 1
      set remote-as {{ globals.as }}
      set route-map-in "H2_T2_IN"
      set route-map-out "T2_OUT"
      set additional-path receive
    next
  end
  config network
    edit 1
      set prefix {{ edges[e].lan_subnet }}
    next
  end
end
