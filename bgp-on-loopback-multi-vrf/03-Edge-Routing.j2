{% import 'Project' as project with context %}

{% set pe_vrf = project.regions[region].pe_vrf|default("32") %}

config router route-map
  {% for i in range(1,3) %}
  edit "H{{loop.index}}_TAG"
    config rule
      edit 1
        set set-tag {{ loop.index }}
      next
    end
  next
  {% endfor %}
end

config router bgp
  set as {{ project.regions[region].as }}
  set router-id {{ loopback }}
  set keepalive-timer 15
  set holdtime-timer 45
  set ibgp-multipath enable
  set recursive-next-hop enable
  set tag-resolve-mode merge
  config neighbor
    {% for h in project.regions[region].hubs %}
    edit {{ project.hubs[h].lo_bgp }}
      set soft-reconfiguration enable
      set soft-reconfiguration-vpnv4 enable
      set advertisement-interval 1
      set interface "Lo"
      set update-source "Lo"
      set connect-timer 1
      set remote-as {{ project.regions[region].as }}
      set route-map-in "H{{loop.index}}_TAG"
      set route-map-in-vpnv4 "H{{loop.index}}_TAG"
    next
    {% endfor %}
  end
  config network
    {% for i in project.profiles[profile].interfaces if i.role == 'lan' and i.advertise|default(true) %}
    edit {{ loop.index }}
      set prefix {{ i.ip|ipaddr(0) }}
    next
    {% endfor %}
  end
  config vrf
    edit "{{ pe_vrf }}"
      set role pe
    next
    {% for i in project.profiles[profile].interfaces if i.vrf is defined %}
    edit "{{ i.vrf }}"
      set role "ce"
      set rd "{{ project.regions[region].as }}:{{ i.vrf }}"
      set import-rt "{{ project.regions[region].as }}:{{ i.vrf }}"
      set export-rt "{{ project.regions[region].as }}:{{ i.vrf }}"
    next
    {% endfor %}
  end
end
